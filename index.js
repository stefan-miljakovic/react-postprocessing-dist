import{BlendFunction as e,BloomEffect as t,BrightnessContrastEffect as n,ChromaticAberrationEffect as r,ColorAverageEffect as i,ColorDepthEffect as o,DepthEffect as c,EffectComposer as s,RenderPass as l,NormalPass as a,EffectPass as u,DepthOfFieldEffect as d,DotScreenEffect as m,GlitchEffect as f,GlitchMode as p,GodRaysEffect as h,GridEffect as g,HueSaturationEffect as b,NoiseEffect as w,OutlineEffect as y,PixelationEffect as E,ScanlineEffect as v,SelectiveBloomEffect as S,SepiaEffect as x,SSAOEffect as T,SMAAPreset as j,EdgeDetectionMode as C,SMAAImageLoader as L,SMAAEffect as R,TextureEffect as A,ToneMappingEffect as P,VignetteEffect as z}from"postprocessing";import F,{forwardRef as O,useMemo as B,useLayoutEffect as D,createContext as M,useEffect as k,useRef as I,useImperativeHandle as N,useContext as G}from"react";import{Vector2 as _,HalfFloatType as q,Vector3 as H,TextureLoader as Y,sRGBEncoding as U,RepeatWrapping as V}from"three";import{useThree as W,useFrame as J,useLoader as K}from"react-three-fiber";const Q=(t,n=e.NORMAL)=>O((function({blendFunction:e,opacity:r,...i},o){const c=B((()=>new t(i)),[i]);return D((()=>{c.blendMode.blendFunction=e||n,void 0!==r&&(c.blendMode.opacity.value=r)}),[e,c.blendMode,r]),F.createElement("primitive",{ref:o,object:c,dispose:null})})),X=(e,t)=>{const n=e[t];return B((()=>{if(n instanceof _)return(new _).set(n.x,n.y);if(Array.isArray(n)){const[e,t]=n;return(new _).set(e,t)}}),[n])},Z=()=>{try{const e=document.querySelector("canvas");return!!e&&!(!window.WebGL2RenderingContext||!e.getContext("webgl2"))}catch(e){return!1}},$=Q(t,e.SCREEN),ee=Q(n),te=O((function(e,t){const n=X(e,"offset"),i=B((()=>new r({...e,offset:n})),[n,e]);return F.createElement("primitive",{ref:t,object:i,dispose:null})})),ne=O((function({blendFunction:t=e.NORMAL},n){const r=B((()=>new i(t)),[t]);return F.createElement("primitive",{ref:n,object:r,dispose:null})})),re=Q(o),ie=Q(c),oe=M(null),ce=F.memo(O((({children:e,camera:t,scene:n,renderPriority:r=1,depthBuffer:i,stencilBuffer:o,multisampling:c=8,frameBufferType:d=q,shouldRender:m=!0},f)=>{const{gl:p,scene:h,camera:g,size:b}=W();n=n||h,t=t||g;const[w,y]=B((()=>{const e=new s(p,{depthBuffer:i,stencilBuffer:o,multisampling:Z()?c:0,frameBufferType:d});e.addPass(new l(n,t));const r=new a(n,t);return e.addPass(r),[e,r]}),[t,p,i,o,c,d,n]);k((()=>null==w?void 0:w.setSize(b.width,b.height)),[w,b]),J(((e,t)=>{m&&w.render(t)}),r);const E=I();k((()=>{let e;return E.current&&w&&(e=new u(t,...E.current.__objects),w.addPass(e),e.renderToScreen=!0),()=>{e&&(null==w||w.removePass(e))}}),[w,t]);const v=B((()=>({composer:w,normalPass:y,camera:t,scene:n})),[w,y,t,n]);return N(f,(()=>w),[w]),F.createElement(oe.Provider,{value:v},F.createElement("group",{ref:E},e))}))),se=O((function({target:e,depthTexture:t,...n},r){const{camera:i}=G(oe),o=B((()=>new d(i,n)),[i,n]);return D((()=>{if(e){const t=e instanceof H?(new H).set(e.x,e.y,e.z):(new H).set(e[0],e[1],e[2]);o.target=t}t&&o.setDepthTexture(t.texture,t.packing)}),[e,t,o]),F.createElement("primitive",{ref:r,object:o,dispose:null})})),le=Q(m),ae=O((function({active:e,...t},n){const r=X(t,"delay"),i=X(t,"duration"),o=X(t,"strength"),c=B((()=>new f({...t,delay:r,duration:i,strength:o})),[r,i,t,o]);return D((()=>{c.mode=e?t.mode||p.SPORADIC:p.DISABLED}),[e,c,t.mode]),F.createElement("primitive",{ref:n,object:c,dispose:null})})),ue=O((function(e,t){const{camera:n}=G(oe),r=B((()=>new h(n,e.sun,e)),[n,e]);return F.createElement("primitive",{ref:t,object:r,dispose:null})})),de=O((function({size:e,...t},n){const r=B((()=>new g(t)),[t]);return D((()=>{e&&r.setSize(e.width,e.height)}),[r,e]),F.createElement("primitive",{ref:n,object:r,dispose:null})})),me=Q(b),fe=Q(w,e.COLOR_DODGE),pe=O((function({selection:e=[],selectionLayer:t=10,blendFunction:n,patternTexture:r,edgeStrength:i,pulseSpeed:o,visibleEdgeColor:c,hiddenEdgeColor:s,width:l,height:a,kernelSize:u,blur:d,xRay:m,...f},p){const{scene:h,camera:g}=G(oe),b=B((()=>new y(h,g,{blendFunction:n,patternTexture:r,edgeStrength:i,pulseSpeed:o,visibleEdgeColor:c,hiddenEdgeColor:s,width:l,height:a,kernelSize:u,blur:d,xRay:m})),[n,d,g,i,a,s,u,r,o,h,c,l,m]);return k((()=>{b.clearSelection(),b.setSelection(Array.isArray(e)?e.map((e=>e.current)):[e.current])}),[b,e]),k((()=>{b.selectionLayer=t}),[b,t]),F.createElement("primitive",{ref:p,object:b,dispose:null})})),he=O((function({granularity:e=5},t){const n=B((()=>new E(e)),[e]);return F.createElement("primitive",{ref:t,object:n,dispose:null})})),ge=Q(v,e.OVERLAY),be=O((function({selection:t=[],selectionLayer:n=10,lights:r=[],luminanceThreshold:i,luminanceSmoothing:o,intensity:c,width:s,height:l,kernelSize:a},u){0===r.length&&console.warn("SelectiveBloom requires lights to work.");const{scene:d,camera:m}=G(oe),f=B((()=>new S(d,m,{blendFunction:e.SCREEN,luminanceThreshold:i,luminanceSmoothing:o,intensity:c,width:s,height:l,kernelSize:a})),[m,l,c,a,o,i,d,s]);return k((()=>{f.selection.set(Array.isArray(t)?t.map((e=>e.current)):[t.current])}),[f,t]),k((()=>{f.selection.layer=n}),[f,n]),k((()=>(r.forEach((e=>((e,t)=>{e.current.layers.enable(t.selection.layer)})(e,f))),()=>r.forEach((e=>((e,t)=>{e.current.layers.disable(t.selection.layer)})(e,f))))),[f,r,n]),F.createElement("primitive",{ref:u,object:f,dispose:null})})),we=Q(x),ye=O((function(t,n){const{camera:r,normalPass:i}=G(oe),o=B((()=>new T(r,i.renderTarget.texture,{blendFunction:e.MULTIPLY,samples:30,rings:4,distanceThreshold:1,distanceFalloff:0,rangeThreshold:.5,rangeFalloff:.1,luminanceInfluence:.9,radius:20,scale:.5,bias:.5,...t})),[r,i.renderTarget.texture,t]);return F.createElement("primitive",{ref:n,object:o,dispose:null})})),Ee=O((function({preset:e=j.HIGH,edgeDetectionMode:t=C.COLOR},n){const r=K(L,""),i=B((()=>new R(...r,e,t)),[r,e,t]);return F.createElement("primitive",{ref:n,object:i,dispose:null})})),ve=O((function({textureSrc:e,texture:t,...n},r){const i=K(Y,e);D((()=>{i.encoding=U,i.wrapS=i.wrapT=V}),[i]);const o=B((()=>new A({...n,texture:i||t})),[n,i,t]);return F.createElement("primitive",{ref:r,object:o,dispose:null})})),Se=Q(P),xe=Q(z);export{$ as Bloom,ee as BrightnessContrast,te as ChromaticAberration,ne as ColorAverage,re as ColorDepth,ie as Depth,se as DepthOfField,le as DotScreen,ce as EffectComposer,oe as EffectComposerContext,ae as Glitch,ue as GodRays,de as Grid,me as HueSaturation,fe as Noise,pe as Outline,he as Pixelation,Ee as SMAA,ye as SSAO,ge as Scanline,be as SelectiveBloom,we as Sepia,ve as Texture,Se as ToneMapping,xe as Vignette,Z as isWebGL2Available,X as useVector2,Q as wrapEffect};
